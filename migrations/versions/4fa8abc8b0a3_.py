"""empty message

Revision ID: 4fa8abc8b0a3
Revises: 
Create Date: 2020-01-27 16:22:01.468861

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4fa8abc8b0a3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('email_group', sa.String(length=300), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_group'),
    sa.UniqueConstraint('name')
    )
    op.create_table('qhawax',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('main_aqi', sa.Float(), nullable=True),
    sa.Column('main_inca', sa.Float(), nullable=True),
    sa.Column('_location', sqlalchemy_json.NestedMutableJson(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('authenticated', sa.Boolean(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('email', sa.String(length=300), nullable=False),
    sa.Column('password_hash', sa.String(length=300), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('air_quality_measurement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('CO', sa.Float(), nullable=True),
    sa.Column('H2S', sa.Float(), nullable=True),
    sa.Column('NO2', sa.Float(), nullable=True),
    sa.Column('O3', sa.Float(), nullable=True),
    sa.Column('PM25', sa.Float(), nullable=True),
    sa.Column('PM10', sa.Float(), nullable=True),
    sa.Column('SO2', sa.Float(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('alt', sa.Float(), nullable=True),
    sa.Column('qhawax_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['qhawax_id'], ['qhawax.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gas_sensor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('WE', sa.Float(), nullable=True),
    sa.Column('AE', sa.Float(), nullable=True),
    sa.Column('sensitivity', sa.Float(), nullable=True),
    sa.Column('sensitivity_2', sa.Float(), nullable=True),
    sa.Column('C2', sa.Float(), server_default='0', nullable=False),
    sa.Column('C1', sa.Float(), server_default='1', nullable=False),
    sa.Column('C0', sa.Float(), server_default='0', nullable=False),
    sa.Column('NC1', sa.Float(), server_default='1', nullable=False),
    sa.Column('NC0', sa.Float(), server_default='0', nullable=False),
    sa.Column('qhawax_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['qhawax_id'], ['qhawax.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_table('processed_measurement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('CO', sa.Float(), nullable=True),
    sa.Column('CO2', sa.Float(), nullable=True),
    sa.Column('H2S', sa.Float(), nullable=True),
    sa.Column('NO', sa.Float(), nullable=True),
    sa.Column('NO2', sa.Float(), nullable=True),
    sa.Column('O3', sa.Float(), nullable=True),
    sa.Column('PM1', sa.Float(), nullable=True),
    sa.Column('PM25', sa.Float(), nullable=True),
    sa.Column('PM10', sa.Float(), nullable=True),
    sa.Column('SO2', sa.Float(), nullable=True),
    sa.Column('VOC', sa.Float(), nullable=True),
    sa.Column('UV', sa.Float(), nullable=True),
    sa.Column('UVA', sa.Float(), nullable=True),
    sa.Column('UVB', sa.Float(), nullable=True),
    sa.Column('spl', sa.Float(), nullable=True),
    sa.Column('humidity', sa.Float(), nullable=True),
    sa.Column('pressure', sa.Float(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lon', sa.Float(), nullable=True),
    sa.Column('alt', sa.Float(), nullable=True),
    sa.Column('qhawax_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['qhawax_id'], ['qhawax.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('processed_measurement')
    op.drop_table('gas_sensor')
    op.drop_table('air_quality_measurement')
    op.drop_table('user')
    op.drop_table('qhawax')
    op.drop_table('company')
    # ### end Alembic commands ###
